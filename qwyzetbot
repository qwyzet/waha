import telebot
import sqlite3
import datetime
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7343567081:AAGwV9j1iw49hDoDJHvqfuZecwVNy2pqVoY"
bot = telebot.TeleBot(TOKEN)

# ID –∞–¥–º–∏–Ω–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID)
ADMIN_ID = 123456789

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
def init_db():
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        user_id INTEGER UNIQUE,
                        name TEXT,
                        phone TEXT UNIQUE,
                        email TEXT,
                        reg_date TEXT,
                        language TEXT)''')
    conn.commit()
    conn.close()

init_db()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
def language_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    ru_button = KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
    uz_button = KeyboardButton("üá∫üáø O'zbek")
    markup.add(ru_button, uz_button)
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def request_phone_keyboard(language):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    phone_button = KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä" if language == "ru" else "üì± Raqamingizni yuboring", request_contact=True)
    markup.add(phone_button)
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
def choose_name_keyboard(language):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    names_ru = ["–ò–≤–∞–Ω", "–ú–∞—Ä–∏—è", "–ê–ª–µ–∫—Å–µ–π", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞", "üîÑ –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"]
    names_uz = ["Ismoil", "Sarvinoz", "Alisher", "Zarina", "üîÑ Qo'lda kiritish"]
    names = names_ru if language == "ru" else names_uz
    for i in range(0, len(names), 2):
        markup.add(KeyboardButton(names[i]), KeyboardButton(names[i+1]) if i+1 < len(names) else None)
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ email
def request_email_keyboard(language):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    email_manual = "üìß –í–≤–µ—Å—Ç–∏ email –≤—Ä—É—á–Ω—É—é" if language == "ru" else "üìß Emailni qo'lda kiritish"
    skip = "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" if language == "ru" else "‚è≠ O'tkazib yuborish"
    markup.add(KeyboardButton(email_manual), KeyboardButton(skip))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu_keyboard(language):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    profile_btn = KeyboardButton("üìã –ü—Ä–æ—Ñ–∏–ª—å" if language == "ru" else "üìã Profil")
    set_phone_btn = KeyboardButton("üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä" if language == "ru" else "üìû Raqamni o'zgartirish")
    set_email_btn = KeyboardButton("üìß –ò–∑–º–µ–Ω–∏—Ç—å Email" if language == "ru" else "üìß Emailni o'zgartirish")
    help_btn = KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å" if language == "ru" else "‚ÑπÔ∏è Yordam")
    markup.add(profile_btn, set_phone_btn)
    markup.add(set_email_btn, help_btn)
    return markup

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    bot.send_message(user_id, "üåç –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:", reply_markup=language_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda message: message.text in ["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá∫üáø O'zbek"])
def set_language(message):
    user_id = message.chat.id
    language = "ru" if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π" else "uz"

    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("INSERT OR REPLACE INTO users (user_id, language) VALUES (?, ?)", (user_id, language))
    conn.commit()
    conn.close()

    bot.send_message(user_id, "üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:" if language == "ru" else "üì± Raqamingizni yuboring:",
                     reply_markup=request_phone_keyboard(language))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@bot.message_handler(content_types=['contact'])
def get_phone(message):
    user_id = message.chat.id
    phone_number = message.contact.phone_number

    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("SELECT language FROM users WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0] if cursor.fetchone() else "ru"

    cursor.execute("UPDATE users SET phone=?, reg_date=? WHERE user_id=?",
                   (phone_number, datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"), user_id))
    conn.commit()
    conn.close()

    bot.send_message(user_id, "‚úÖ –ù–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∏–º—è:" if language == "ru" else
                              "‚úÖ Raqamingiz saqlandi! Endi ismingizni tanlang:",
                     reply_markup=choose_name_keyboard(language))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
@bot.message_handler(func=lambda message: message.text in ["–ß–∞—Ä–æ—Å", "–û–π–±–µ–∫", "–ê–±—Ä–æ—Ä", "–°–∞—Ä–¥–æ—Ä", "Ismoil", "Sarvinoz", "Alisher", "Zarina"])
def choose_name(message):
    user_id = message.chat.id
    name = message.text

    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET name=? WHERE user_id=?", (name, user_id))
    cursor.execute("SELECT language FROM users WHERE user_id = ?", (user_id,))
    language = cursor.fetchone()[0] if cursor.fetchone() else "ru"
    conn.commit()
    conn.close()

    bot.send_message(user_id, "‚úÖ –ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ email (–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)." if language == "ru" else
                              "‚úÖ Ism saqlandi! Endi emailni kiriting (o'tkazib yuborish mumkin).",
                     reply_markup=request_email_keyboard(language))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ email
@bot.message_handler(func=lambda message: message.text in ["üìß –í–≤–µ—Å—Ç–∏ email –≤—Ä—É—á–Ω—É—é", "üìß Emailni qo'lda kiritish"])
def enter_email(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:" if "–í–≤–µ—Å—Ç–∏" in message.text else "Emailingizni kiriting:")
    bot.register_next_step_handler(message, process_email)

@bot.message_handler(func=lambda message: message.text in ["‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚è≠ O'tkazib yuborish"])
def skip_email(message):
    user_id = message.chat.id
    bot.send_message(user_id, "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!" if "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" in message.text else
                              "‚úÖ Ro'yxatdan o'tish tugadi! Xush kelibsiz!",
                     reply_markup=main_menu_keyboard("ru"))

def process_email(message):
    user_id = message.chat.id
    email = message.text
    if "@" in email and "." in email:
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET email=? WHERE user_id=?", (email, user_id))
        conn.commit()
        conn.close()
        bot.send_message(user_id, "‚úÖ Email —Å–æ—Ö—Ä–∞–Ω–µ–Ω!" if "@" in email else "‚úÖ Email saqlandi!",
                         reply_markup=main_menu_keyboard("ru"))
    else:
        bot.send_message(user_id, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email." if "@" in email else "‚ùå Email noto'g'ri.")

bot.polling(none_stop=True)


