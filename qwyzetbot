import telebot
import sqlite3
import datetime
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7343567081:AAGwV9j1iw49hDoDJHvqfuZecwVNy2pqVoY"
bot = telebot.TeleBot(TOKEN)

# ID –∞–¥–º–∏–Ω–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID)
ADMIN_ID = 123456789

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
def init_db():
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        user_id INTEGER UNIQUE,
                        name TEXT,
                        phone TEXT UNIQUE,
                        email TEXT,
                        reg_date TEXT)''')
    conn.commit()
    conn.close()

init_db()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def request_phone_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    phone_button = KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    markup.add(phone_button)
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏ (–ø—Ä–∏–º–µ—Ä —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–º–µ–Ω–∞–º–∏)
def choose_name_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ò–≤–∞–Ω"), KeyboardButton("–ú–∞—Ä–∏—è"))
    markup.add(KeyboardButton("–ê–ª–µ–∫—Å–µ–π"), KeyboardButton("–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞"))
    markup.add(KeyboardButton("üîÑ –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ email
def request_email_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üìß –í–≤–µ—Å—Ç–∏ email –≤—Ä—É—á–Ω—É—é"), KeyboardButton("‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    profile_btn = KeyboardButton("üìã –ü—Ä–æ—Ñ–∏–ª—å")
    set_phone_btn = KeyboardButton("üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä")
    set_email_btn = KeyboardButton("üìß –ò–∑–º–µ–Ω–∏—Ç—å Email")
    help_btn = KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    markup.add(profile_btn, set_phone_btn)
    markup.add(set_email_btn, help_btn)
    return markup

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    first_name = message.from_user.first_name

    bot.send_message(user_id, f"–ü—Ä–∏–≤–µ—Ç, {first_name}! –î–∞–≤–∞–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è.\nüì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.",
                     reply_markup=request_phone_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@bot.message_handler(content_types=['contact'])
def get_phone(message):
    user_id = message.chat.id
    phone_number = message.contact.phone_number

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("INSERT OR REPLACE INTO users (user_id, phone, reg_date) VALUES (?, ?, ?)",
                   (user_id, phone_number, datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")))
    conn.commit()
    conn.close()

    bot.send_message(user_id, "‚úÖ –ù–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∏–º—è:", reply_markup=choose_name_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
@bot.message_handler(func=lambda message: message.text in ["–ò–≤–∞–Ω", "–ú–∞—Ä–∏—è", "–ê–ª–µ–∫—Å–µ–π", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞"])
def choose_name(message):
    user_id = message.chat.id
    name = message.text

    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET name=? WHERE user_id=?", (name, user_id))
    conn.commit()
    conn.close()

    bot.send_message(user_id, f"‚úÖ –ò–º—è {name} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ email (–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å).",
                     reply_markup=request_email_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
@bot.message_handler(func=lambda message: message.text == "üîÑ –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é")
def manual_name_entry(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –≤—Ä—É—á–Ω—É—é:")
    bot.register_next_step_handler(message, process_manual_name)

def process_manual_name(message):
    user_id = message.chat.id
    name = message.text

    if len(name) > 1:
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET name=? WHERE user_id=?", (name, user_id))
        conn.commit()
        conn.close()

        bot.send_message(user_id, f"‚úÖ –ò–º—è {name} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ email (–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å).",
                         reply_markup=request_email_keyboard())
    else:
        bot.send_message(user_id, "‚ùå –ò–º—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ email
@bot.message_handler(func=lambda message: message.text == "üìß –í–≤–µ—Å—Ç–∏ email –≤—Ä—É—á–Ω—É—é")
def enter_email(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:")
    bot.register_next_step_handler(message, process_email)

@bot.message_handler(func=lambda message: message.text == "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
def skip_email(message):
    user_id = message.chat.id
    bot.send_message(user_id, "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=main_menu_keyboard())

def process_email(message):
    user_id = message.chat.id
    email = message.text

    if "@" in email and "." in email:
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET email=? WHERE user_id=?", (email, user_id))
        conn.commit()
        conn.close()

        bot.send_message(user_id, f"‚úÖ Email {email} —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.", reply_markup=main_menu_keyboard())
    else:
        bot.send_message(user_id, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –ö–æ–º–∞–Ω–¥–∞ /profile
@bot.message_handler(func=lambda message: message.text == "üìã –ü—Ä–æ—Ñ–∏–ª—å")
def profile(message):
    user_id = message.chat.id

    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()
    cursor.execute("SELECT name, phone, email, reg_date FROM users WHERE user_id = ?", (user_id,))
    user_data = cursor.fetchone()
    conn.close()

    if user_data:
        name, phone, email, reg_date = user_data
        email_text = email if email else "–ù–µ —É–∫–∞–∑–∞–Ω"

        bot.send_message(user_id, f"üìå –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\nüë§ –ò–º—è: {name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüìß Email: {email_text}\nüìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {reg_date}")
    else:
        bot.send_message(user_id, "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")

# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
def help_command(message):
    bot.send_message(message.chat.id, "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                                      "üìã –ü—Ä–æ—Ñ–∏–ª—å - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ\n"
                                      "üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä - –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
                                      "üìß –ò–∑–º–µ–Ω–∏—Ç—å Email - –æ–±–Ω–æ–≤–∏—Ç—å email\n"
                                      "‚ÑπÔ∏è –ü–æ–º–æ—â—å - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

bot.polling(none_stop=True)



